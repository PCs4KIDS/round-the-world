{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/bootState.js","webpack:///./src/learnState.js","webpack:///./src/preloadState.js","webpack:///./src/menuState.js","webpack:///./src/winState.js","webpack:///./src/gameOver.js","webpack:///./src/flagState.js","webpack:///./src/currencyState.js","webpack:///./src/populationState.js","webpack:///./src/capitalState.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","init","this","game","stage","backgroundColor","scale","scaleMode","Phaser","ScaleManager","SHOW_ALL","pageAlignHorizontally","pageAlignVertically","preload","load","bitmapFont","image","create","state","start","nextSound","add","audio","backSound","clickSound","index","continents","backBt","sprite","getScaledHeight","height","width","getScaledWidth","inputEnabled","events","onInputDown","home","countries","global","fullArray","continentIndex","slice","console","log","right","world","centerY","setTo","anchor","set","next","left","back","getInfo","JSON","parse","cache","getText","correctSound","correctSound2","continentName","bitmapText","centerX","countryData","cName","maxWidth","align","flag","cCapital","capital","cCurrency","currency","cPopulation","population","play","length","destroy","setText","bg","globe","loadBar","setPreloadSprite","spritesheet","text","j","localStorage","getItem","highscore","onLArrowClick","onRArrowClick","btCapital","startCapitalMode","btFlag","startFlagMode","btPopulation","startPopulationMode","btCurrency","startCurrencyMode","btLearn","startLearnMode","Continents","txtContinent","alpha","modeIndex","updateModeArrays","modeArray","wonSound","modes","states","gameOverText1","gameOverText2","score","setItem","btRestart","modeButton","restart","txtRestart","btHome","txtHome","gameOverText3","gameOverText4","btFeedback","feedback","window","open","wrongSound","overSound","streakSound","streak","txtScore","stats","textS","textL","lives","livesImage","frame","ansPost","choice","countriesAF","fullOptions","answer","options","usedFlags","questionLine1","questionLine2","checkChoice","x","y","nextQuestion","setFlags","data","optXPos","optYPos","time","Timer","SECOND","correct","wrong","gameover","bonus","pop","reset","ArrayUtils","shuffle","queCountry","push","usedCapitals","currencyOptions","update","count","checkoption","usedPopulation","divId","Game","CANVAS","Device","whenReady","plugins","PhaserInput","Plugin","widthToScale","heightToScale","capitalState","populationState","currencyState","flagState","gameOver","winState","menuState","preloadState","learnState","bootState","createGameInDiv"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAjB,GACAY,OAAAC,eAAAb,EAAA,cAAiDkB,OAAA,KAIjDpB,EAAAqB,EAAA,SAAAlB,GACA,IAAAS,EAAAT,KAAAmB,WACA,WAA2B,OAAAnB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDxB,EAAA2B,EAAA,GAIA3B,IAAA4B,EAAA,oBCnEAzB,EAAAD,SAEA2B,KAAA,WACAC,KAAAC,KAAAC,MAAAC,gBAAA,UACAH,KAAAI,MAAAC,UAAAC,OAAAC,aAAAC,SACAR,KAAAI,MAAAK,uBAAA,EACAT,KAAAI,MAAAM,qBAAA,GAGAC,QAAA,WACAX,KAAAC,KAAAW,KAAAC,WAAA,sEACAb,KAAAY,KAAAE,MAAA,0CACAd,KAAAY,KAAAE,MAAA,oCAGAC,OAAA,WACAf,KAAAgB,MAAAC,MAAA,iCChBA5C,EAAAD,SACA2C,OAAA,WACAf,KAAAkB,UAAAlB,KAAAC,KAAAkB,IAAAC,MAAA,QACApB,KAAAqB,UAAArB,KAAAC,KAAAkB,IAAAC,MAAA,QACApB,KAAAsB,WAAAtB,KAAAC,KAAAkB,IAAAC,MAAA,SAEApB,KAAAuB,MAAA,EACAvB,KAAAwB,YAAA,gDAGAxB,KAAAyB,OAAAzB,KAAAC,KAAAkB,IAAAO,OAAA,EAAA1B,KAAAC,KAAA0B,gBAAA,cACA3B,KAAAyB,OAAAG,OAAA5B,KAAAC,KAAA0B,gBAAA3B,KAAAyB,OAAAG,QACA5B,KAAAyB,OAAAI,MAAA7B,KAAAC,KAAA6B,eAAA9B,KAAAyB,OAAAI,OACA7B,KAAAyB,OAAAM,cAAA,EACA/B,KAAAyB,OAAAO,OAAAC,YAAAd,IAAAnB,KAAAkC,KAAAlC,MAEAA,KAAAmC,UAAAnC,KAAAC,KAAAmC,OAAAC,UAAArC,KAAAC,KAAAmC,OAAAE,gBAAAC,MAAA,GACAC,QAAAC,IAAAzC,KAAAC,KAAAmC,OAAAE,gBACAE,QAAAC,IAAAzC,KAAAC,KAAAmC,OAAAC,UAAArC,KAAAC,KAAAmC,OAAAE,iBAEAtC,KAAA0C,MAAA1C,KAAAC,KAAAkB,IAAAO,OAAA1B,KAAAC,KAAA6B,eAAA,MAAA9B,KAAA2C,MAAAC,QAAA,cACA5C,KAAA0C,MAAAd,OAAA5B,KAAAC,KAAA0B,gBAAA3B,KAAA0C,MAAAd,QACA5B,KAAA0C,MAAAb,MAAA7B,KAAAC,KAAA6B,eAAA9B,KAAA0C,MAAAb,OACA7B,KAAA0C,MAAAtC,MAAAyC,MAAA,IACA7C,KAAA0C,MAAAI,OAAAC,IAAA,IACA/C,KAAA0C,MAAAX,cAAA,EACA/B,KAAA0C,MAAAV,OAAAC,YAAAd,IAAAnB,KAAAgD,KAAAhD,MAEAA,KAAAiD,KAAAjD,KAAAC,KAAAkB,IAAAO,OAAA1B,KAAAC,KAAA6B,eAAA,IAAA9B,KAAA2C,MAAAC,QAAA,aACA5C,KAAAiD,KAAArB,OAAA5B,KAAAC,KAAA0B,gBAAA3B,KAAAiD,KAAArB,QACA5B,KAAAiD,KAAApB,MAAA7B,KAAAC,KAAA6B,eAAA9B,KAAAiD,KAAApB,OACA7B,KAAAiD,KAAA7C,MAAAyC,MAAA,IACA7C,KAAAiD,KAAAH,OAAAC,IAAA,IACA/C,KAAAiD,KAAAlB,cAAA,EACA/B,KAAAiD,KAAAjB,OAAAC,YAAAd,IAAAnB,KAAAkD,KAAAlD,MAEAA,KAAAmD,QAAAC,KAAAC,MAAArD,KAAAC,KAAAqD,MAAAC,QAAA,WAEAvD,KAAAwD,aAAAxD,KAAAC,KAAAkB,IAAAC,MAAA,WACApB,KAAAyD,cAAAzD,KAAAC,KAAAkB,IAAAC,MAAA,YAIApB,KAAA0D,cAAA1D,KAAAC,KAAAkB,IAAAwC,WAAA3D,KAAA2C,MAAAiB,QAAA5D,KAAAC,KAAA0B,gBAAA,gCAAA3B,KAAAwB,WAAAxB,KAAAC,KAAAmC,OAAAE,gBAAAtC,KAAAC,KAAA0B,gBAAA,KACA3B,KAAA0D,cAAAZ,OAAAC,IAAA,IAEA,IAAAc,EAAA7D,KAAAmD,QAAAnD,KAAAmC,UAAAnC,KAAAuB,QACAvB,KAAA8D,MAAA9D,KAAAC,KAAAkB,IAAAwC,WAAA3D,KAAAC,KAAA6B,eAAA,KAAA9B,KAAAC,KAAA0B,gBAAA,cAAAkC,EAAAhF,KAAAmB,KAAAC,KAAA0B,gBAAA,MACA3B,KAAA8D,MAAAC,SAAA,KACA/D,KAAA8D,MAAAE,MAAA,OAEAhE,KAAAiE,KAAAjE,KAAAC,KAAAkB,IAAAO,OAAA1B,KAAAC,KAAA6B,eAAA,KAAA9B,KAAAC,KAAA0B,gBAAA,KAAA3B,KAAAmC,UAAAnC,KAAAuB,QACAvB,KAAAiE,KAAArC,OAAA5B,KAAAC,KAAA0B,gBAAA3B,KAAAiE,KAAArC,QACA5B,KAAAiE,KAAApC,MAAA7B,KAAAC,KAAA6B,eAAA9B,KAAAiE,KAAApC,OACA7B,KAAAiE,KAAAnB,OAAAC,IAAA,IAEA/C,KAAAkE,SAAAlE,KAAAC,KAAAkB,IAAAwC,WAAA3D,KAAAC,KAAA6B,eAAA,KAAA9B,KAAAC,KAAA0B,gBAAA,0BAAAkC,EAAAM,QAAAnE,KAAAC,KAAA0B,gBAAA,KACA3B,KAAAoE,UAAApE,KAAAC,KAAAkB,IAAAwC,WAAA3D,KAAAC,KAAA6B,eAAA,KAAA9B,KAAAC,KAAA0B,gBAAA,2BAAAkC,EAAAQ,SAAArE,KAAAC,KAAA0B,gBAAA,KACA3B,KAAAsE,YAAAtE,KAAAC,KAAAkB,IAAAwC,WAAA3D,KAAAC,KAAA6B,eAAA,KAAA9B,KAAAC,KAAA0B,gBAAA,6BAAAkC,EAAAU,WAAAvE,KAAAC,KAAA0B,gBAAA,MAEAO,KAAA,WACAlC,KAAAsB,WAAAkD,OACAxE,KAAAC,KAAAe,MAAAC,MAAA,cAEA+B,KAAA,WACA,GAAAhD,KAAAuB,MAAAvB,KAAAmC,UAAAsC,OAAA,GACAzE,KAAAkB,UAAAsD,OACAxE,KAAAiE,KAAAS,UACA1E,KAAAuB,OAAA,EACAvB,KAAAiE,KAAAjE,KAAAC,KAAAkB,IAAAO,OAAA1B,KAAAC,KAAA6B,eAAA,KAAA9B,KAAAC,KAAA0B,gBAAA,KAAA3B,KAAAmC,UAAAnC,KAAAuB,QACAvB,KAAAiE,KAAArC,OAAA5B,KAAAC,KAAA0B,gBAAA3B,KAAAiE,KAAArC,QACA5B,KAAAiE,KAAApC,MAAA7B,KAAAC,KAAA6B,eAAA9B,KAAAiE,KAAApC,OACA7B,KAAAiE,KAAAnB,OAAAC,IAAA,IACA,IAAAc,EAAA7D,KAAAmD,QAAAnD,KAAAmC,UAAAnC,KAAAuB,QACAvB,KAAA8D,MAAAa,QAAAd,EAAAhF,MACAmB,KAAAkE,SAAAS,QAAA,YAAAd,EAAAM,SACAnE,KAAAoE,UAAAO,QAAA,aAAAd,EAAAQ,UACArE,KAAAsE,YAAAK,QAAA,eAAAd,EAAAU,cAIArB,KAAA,WACA,GAAAlD,KAAAuB,MAAA,GACAvB,KAAAqB,UAAAmD,OACAxE,KAAAiE,KAAAS,UACA1E,KAAAuB,OAAA,EACAvB,KAAAiE,KAAAjE,KAAAC,KAAAkB,IAAAO,OAAA1B,KAAAC,KAAA6B,eAAA,KAAA9B,KAAAC,KAAA0B,gBAAA,KAAA3B,KAAAmC,UAAAnC,KAAAuB,QACAvB,KAAAiE,KAAArC,OAAA5B,KAAAC,KAAA0B,gBAAA3B,KAAAiE,KAAArC,QACA5B,KAAAiE,KAAApC,MAAA7B,KAAAC,KAAA6B,eAAA9B,KAAAiE,KAAApC,OACA7B,KAAAiE,KAAAnB,OAAAC,IAAA,IACA,IAAAc,EAAA7D,KAAAmD,QAAAnD,KAAAmC,UAAAnC,KAAAuB,QACAvB,KAAA8D,MAAAa,QAAAd,EAAAhF,MACAmB,KAAAkE,SAAAS,QAAA,YAAAd,EAAAM,SACAnE,KAAAoE,UAAAO,QAAA,aAAAd,EAAAQ,UACArE,KAAAsE,YAAAK,QAAA,eAAAd,EAAAU,8BC9FAlG,EAAAD,SAEAuC,QAAA,WACAX,KAAA4E,GAAA5E,KAAAC,KAAAkB,IAAAwC,WAAA3D,KAAA2C,MAAAiB,QAAA5D,KAAAC,KAAA0B,gBAAA,gCAAA3B,KAAAC,KAAA0B,gBAAA,MACA3B,KAAA4E,GAAA9B,OAAAD,MAAA,IAEA7C,KAAA6E,MAAA7E,KAAAC,KAAAkB,IAAAO,OAAA1B,KAAA2C,MAAAiB,QAAA5D,KAAAC,KAAA0B,gBAAA,cACA3B,KAAA6E,MAAAjD,OAAA5B,KAAAC,KAAA0B,gBAAA3B,KAAA6E,MAAAjD,QACA5B,KAAA6E,MAAAhD,MAAA7B,KAAAC,KAAA6B,eAAA9B,KAAA6E,MAAAhD,OACA7B,KAAA6E,MAAA/B,OAAAD,MAAA,IAEA7C,KAAA8E,QAAA9E,KAAAC,KAAAkB,IAAAO,OAAA1B,KAAA2C,MAAAiB,QAAA5D,KAAAC,KAAA0B,gBAAA,mBACA3B,KAAA8E,QAAAhC,OAAAD,MAAA,IACA7C,KAAAY,KAAAmE,iBAAA/E,KAAA8E,SACA9E,KAAA8E,QAAAlD,OAAA5B,KAAAC,KAAA0B,gBAAA3B,KAAA8E,QAAAlD,QACA5B,KAAA8E,QAAAjD,MAAA7B,KAAAC,KAAA6B,eAAA9B,KAAA8E,QAAAjD,OAEA7B,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,KAAAW,KAAAE,MAAA,4BACAd,KAAAC,K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","file":"round-the-world-game.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","module.exports = {\r\n  // set background colour for the game, center game, and scale for all devices\r\n  init: function () {\r\n    this.game.stage.backgroundColor = \"#CDEDFD\";\r\n    this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\r\n    this.scale.pageAlignHorizontally = true;\r\n    this.scale.pageAlignVertically = true;\r\n  },\r\n\r\n  preload: function () {\r\n    this.game.load.bitmapFont('myfont', 'assets/fonts/fontshadow.png', 'assets/fonts/fontshadow.fnt');\r\n    this.load.image('loadingBar', 'assets/images/loading.png');\r\n    this.load.image('globe', 'assets/images/globe.png');\r\n  },\r\n\r\n  create: function () {\r\n    this.state.start('preloadState');\r\n  }\r\n};\r\n","module.exports = {\r\n  create: function () {\r\n    this.nextSound = this.game.add.audio('next');\r\n    this.backSound = this.game.add.audio('back');\r\n    this.clickSound = this.game.add.audio('click');\r\n\r\n    this.index = 0;\r\n    this.continents = ['Africa', 'America', 'Asia', 'Australia', 'Europe'];\r\n\r\n\r\n    this.backBt = this.game.add.sprite(0, this.game.getScaledHeight(10), 'btBack');\r\n    this.backBt.height = this.game.getScaledHeight(this.backBt.height)\r\n    this.backBt.width = this.game.getScaledWidth(this.backBt.width);\r\n    this.backBt.inputEnabled = true;\r\n    this.backBt.events.onInputDown.add(this.home, this);\r\n\r\n    this.countries = this.game.global.fullArray[this.game.global.continentIndex].slice(0);\r\n    console.log(this.game.global.continentIndex);\r\n    console.log(this.game.global.fullArray[this.game.global.continentIndex]);\r\n\r\n    this.right = this.game.add.sprite(this.game.getScaledWidth(1565), this.world.centerY, 'rightArrow');\r\n    this.right.height = this.game.getScaledHeight(this.right.height)\r\n    this.right.width = this.game.getScaledWidth(this.right.width);\r\n    this.right.scale.setTo(0.5);\r\n    this.right.anchor.set(0.5);\r\n    this.right.inputEnabled = true;\r\n    this.right.events.onInputDown.add(this.next, this);\r\n\r\n    this.left = this.game.add.sprite(this.game.getScaledWidth(35), this.world.centerY, 'leftArrow');\r\n    this.left.height = this.game.getScaledHeight(this.left.height)\r\n    this.left.width = this.game.getScaledWidth(this.left.width);\r\n    this.left.scale.setTo(0.5);\r\n    this.left.anchor.set(0.5);\r\n    this.left.inputEnabled = true;\r\n    this.left.events.onInputDown.add(this.back, this);\r\n\r\n    this.getInfo = JSON.parse(this.game.cache.getText('infoAF'));;\r\n\r\n    this.correctSound = this.game.add.audio('correct');\r\n    this.correctSound2 = this.game.add.audio('correct2');\r\n\r\n\r\n\r\n    this.continentName = this.game.add.bitmapText(this.world.centerX, this.game.getScaledHeight(50) , 'myguifont', 'Countries in ' + this.continents[this.game.global.continentIndex] + '', this.game.getScaledHeight(80) );\r\n    this.continentName.anchor.set(0.5);\r\n\r\n    var countryData = this.getInfo[this.countries[this.index]];\r\n    this.cName = this.game.add.bitmapText(this.game.getScaledWidth(500), this.game.getScaledHeight(250), 'myfont', countryData.name, this.game.getScaledHeight(100));\r\n    this.cName.maxWidth = 1100;\r\n    this.cName.align = 'left'\r\n\r\n    this.flag = this.game.add.sprite(this.game.getScaledWidth(250), this.game.getScaledHeight(325), this.countries[this.index]);\r\n    this.flag.height = this.game.getScaledHeight(this.flag.height)\r\n    this.flag.width = this.game.getScaledWidth(this.flag.width);\r\n    this.flag.anchor.set(0.5);\r\n\r\n    this.cCapital = this.game.add.bitmapText(this.game.getScaledWidth(100), this.game.getScaledHeight(550), 'myfont', \"Capital: \" + countryData.capital, this.game.getScaledHeight(80) );\r\n    this.cCurrency = this.game.add.bitmapText(this.game.getScaledWidth(100), this.game.getScaledHeight(700), 'myfont', \"Currency: \" + countryData.currency, this.game.getScaledHeight(80) );\r\n    this.cPopulation = this.game.add.bitmapText(this.game.getScaledWidth(100), this.game.getScaledHeight(850), 'myfont', \"Population: \" + countryData.population, this.game.getScaledHeight(80) );\r\n  },\r\n  home: function () {\r\n    this.clickSound.play();\r\n    this.game.state.start('menuState');\r\n  },\r\n  next: function () {\r\n    if (this.index < this.countries.length - 1) {\r\n      this.nextSound.play();\r\n      this.flag.destroy();\r\n      this.index += 1;\r\n      this.flag = this.game.add.sprite(this.game.getScaledWidth(250), this.game.getScaledHeight(325), this.countries[this.index]);\r\n      this.flag.height = this.game.getScaledHeight(this.flag.height)\r\n      this.flag.width = this.game.getScaledWidth(this.flag.width);\r\n      this.flag.anchor.set(0.5);\r\n      var countryData = this.getInfo[this.countries[this.index]];\r\n      this.cName.setText(countryData.name);\r\n      this.cCapital.setText(\"Capital: \" + countryData.capital);\r\n      this.cCurrency.setText(\"Currency: \" + countryData.currency);\r\n      this.cPopulation.setText(\"Population: \" + countryData.population);\r\n    }\r\n  },\r\n\r\n  back: function () {\r\n    if (this.index > 0) {\r\n      this.backSound.play();\r\n      this.flag.destroy();\r\n      this.index -= 1;\r\n      this.flag = this.game.add.sprite(this.game.getScaledWidth(250), this.game.getScaledHeight(325), this.countries[this.index]);\r\n      this.flag.height = this.game.getScaledHeight(this.flag.height)\r\n      this.flag.width = this.game.getScaledWidth(this.flag.width);\r\n      this.flag.anchor.set(0.5);\r\n      var countryData = this.getInfo[this.countries[this.index]];\r\n      this.cName.setText(countryData.name);\r\n      this.cCapital.setText(\"Capital: \" + countryData.capital);\r\n      this.cCurrency.setText(\"Currency: \" + countryData.currency);\r\n      this.cPopulation.setText(\"Population: \" + countryData.population);\r\n    }\r\n  }\r\n}\r\n","module.exports = {\r\n  //load all flgas, bitmap text, buttons\r\n  preload: function () {\r\n    this.bg = this.game.add.bitmapText(this.world.centerX, this.game.getScaledHeight(400), 'myfont', \"Round the World\", this.game.getScaledHeight(150));\r\n    this.bg.anchor.setTo(0.5);\r\n\r\n    this.globe = this.game.add.sprite(this.world.centerX, this.game.getScaledHeight(700), 'globe');\r\n    this.globe.height = this.game.getScaledHeight(this.globe.height)\r\n    this.globe.width = this.game.getScaledWidth(this.globe.width);\r\n    this.globe.anchor.setTo(0.5);\r\n\r\n    this.loadBar = this.game.add.sprite(this.world.centerX, this.game.getScaledHeight(950), 'loadingBar');\r\n    this.loadBar.anchor.setTo(0.5);\r\n    this.load.setPreloadSprite(this.loadBar);\r\n    this.loadBar.height = this.game.getScaledHeight(this.loadBar.height)\r\n    this.loadBar.width = this.game.getScaledWidth(this.loadBar.width);\r\n\r\n    this.game.load.image('AF', 'assets/flags/AF.png');\r\n    this.game.load.image('AX', 'assets/flags/AX.png');\r\n    this.game.load.image('AL', 'assets/flags/AL.png');\r\n    this.game.load.image('DZ', 'assets/flags/DZ.png');\r\n    this.game.load.image('AS', 'assets/flags/AS.png');\r\n    this.game.load.image('AD', 'assets/flags/AD.png');\r\n    this.game.load.image('AO', 'assets/flags/AO.png');\r\n    this.game.load.image('AI', 'assets/flags/AI.png');\r\n    this.game.load.image('AQ', 'assets/flags/AQ.png');\r\n    this.game.load.image('AG', 'assets/flags/AG.png');\r\n    this.game.load.image('AR', 'assets/flags/AR.png');\r\n    this.game.load.image('AM', 'assets/flags/AM.png');\r\n    this.game.load.image('AW', 'assets/flags/AW.png');\r\n    this.game.load.image('AU', 'assets/flags/AU.png');\r\n    this.game.load.image('AT', 'assets/flags/AT.png');\r\n    this.game.load.image('AZ', 'assets/flags/AZ.png');\r\n    this.game.load.image('BS', 'assets/flags/BS.png');\r\n    this.game.load.image('BH', 'assets/flags/BH.png');\r\n    this.game.load.image('BD', 'assets/flags/BD.png');\r\n    this.game.load.image('BB', 'assets/flags/BB.png');\r\n    this.game.load.image('BY', 'assets/flags/BY.png');\r\n    this.game.load.image('BE', 'assets/flags/BE.png');\r\n    this.game.load.image('BZ', 'assets/flags/BZ.png');\r\n    this.game.load.image('BJ', 'assets/flags/BJ.png');\r\n    this.game.load.image('BM', 'assets/flags/BM.png');\r\n    this.game.load.image('BT', 'assets/flags/BT.png');\r\n    this.game.load.image('BO', 'assets/flags/BO.png');\r\n    this.game.load.image('BQ', 'assets/flags/BQ.png');\r\n    this.game.load.image('BA', 'assets/flags/BA.png');\r\n    this.game.load.image('BW', 'assets/flags/BW.png');\r\n    this.game.load.image('BV', 'assets/flags/BV.png');\r\n    this.game.load.image('BR', 'assets/flags/BR.png');\r\n    this.game.load.image('IO', 'assets/flags/IO.png');\r\n    this.game.load.image('BN', 'assets/flags/BN.png');\r\n    this.game.load.image('BG', 'assets/flags/BG.png');\r\n    this.game.load.image('BF', 'assets/flags/BF.png');\r\n    this.game.load.image('BI', 'assets/flags/BI.png');\r\n    this.game.load.image('KH', 'assets/flags/KH.png');\r\n    this.game.load.image('CM', 'assets/flags/CM.png');\r\n    this.game.load.image('CA', 'assets/flags/CA.png');\r\n    this.game.load.image('CV', 'assets/flags/CV.png');\r\n    this.game.load.image('KY', 'assets/flags/KY.png');\r\n    this.game.load.image('CF', 'assets/flags/CF.png');\r\n    this.game.load.image('TD', 'assets/flags/TD.png');\r\n    this.game.load.image('CL', 'assets/flags/CL.png');\r\n    this.game.load.image('CN', 'assets/flags/CN.png');\r\n    this.game.load.image('CX', 'assets/flags/CX.png');\r\n    this.game.load.image('CC', 'assets/flags/CC.png');\r\n    this.game.load.image('CO', 'assets/flags/CO.png');\r\n    this.game.load.image('KM', 'assets/flags/KM.png');\r\n    this.game.load.image('CG', 'assets/flags/CG.png');\r\n    this.game.load.image('CD', 'assets/flags/CD.png');\r\n    this.game.load.image('CK', 'assets/flags/CK.png');\r\n    this.game.load.image('CR', 'assets/flags/CR.png');\r\n    this.game.load.image('CI', 'assets/flags/CI.png');\r\n    this.game.load.image('HR', 'assets/flags/HR.png');\r\n    this.game.load.image('CU', 'assets/flags/CU.png');\r\n    this.game.load.image('CW', 'assets/flags/CW.png');\r\n    this.game.load.image('CY', 'assets/flags/CY.png');\r\n    this.game.load.image('CZ', 'assets/flags/CZ.png');\r\n    this.game.load.image('DK', 'assets/flags/DK.png');\r\n    this.game.load.image('DJ', 'assets/flags/DJ.png');\r\n    this.game.load.image('DM', 'assets/flags/DM.png');\r\n    this.game.load.image('DO', 'assets/flags/DO.png');\r\n    this.game.load.image('EC', 'assets/flags/EC.png');\r\n    this.game.load.image('EG', 'assets/flags/EG.png');\r\n    this.game.load.image('SV', 'assets/flags/SV.png');\r\n    this.game.load.image('GQ', 'assets/flags/GQ.png');\r\n    this.game.load.image('ER', 'assets/flags/ER.png');\r\n    this.game.load.image('EE', 'assets/flags/EE.png');\r\n    this.game.load.image('ET', 'assets/flags/ET.png');\r\n    this.game.load.image('FK', 'assets/flags/FK.png');\r\n    this.game.load.image('FO', 'assets/flags/FO.png');\r\n    this.game.load.image('FJ', 'assets/flags/FJ.png');\r\n    this.game.load.image('FI', 'assets/flags/FI.png');\r\n    this.game.load.image('FR', 'assets/flags/FR.png');\r\n    this.game.load.image('GF', 'assets/flags/GF.png');\r\n    this.game.load.image('PF', 'assets/flags/PF.png');\r\n    this.game.load.image('TF', 'assets/flags/TF.png');\r\n    this.game.load.image('GA', 'assets/flags/GA.png');\r\n    this.game.load.image('GM', 'assets/flags/GM.png');\r\n    this.game.load.image('GE', 'assets/flags/GE.png');\r\n    this.game.load.image('DE', 'assets/flags/DE.png');\r\n    this.game.load.image('GH', 'assets/flags/GH.png');\r\n    this.game.load.image('GI', 'assets/flags/GI.png');\r\n    this.game.load.image('GR', 'assets/flags/GR.png');\r\n    this.game.load.image('GL', 'assets/flags/GL.png');\r\n    this.game.load.image('GD', 'assets/flags/GD.png');\r\n    this.game.load.image('GP', 'assets/flags/GP.png');\r\n    this.game.load.image('GU', 'assets/flags/GU.png');\r\n    this.game.load.image('GT', 'assets/flags/GT.png');\r\n    this.game.load.image('GG', 'assets/flags/GG.png');\r\n    this.game.load.image('GN', 'assets/flags/GN.png');\r\n    this.game.load.image('GW', 'assets/flags/GW.png');\r\n    this.game.load.image('GY', 'assets/flags/GY.png');\r\n    this.game.load.image('HT', 'assets/flags/HT.png');\r\n    this.game.load.image('HM', 'assets/flags/HM.png');\r\n    this.game.load.image('VA', 'assets/flags/VA.png');\r\n    this.game.load.image('HN', 'assets/flags/HN.png');\r\n    this.game.load.image('HK', 'assets/flags/HK.png');\r\n    this.game.load.image('HU', 'assets/flags/HU.png');\r\n    this.game.load.image('IS', 'assets/flags/IS.png');\r\n    this.game.load.image('IN', 'assets/flags/IN.png');\r\n    this.game.load.image('ID', 'assets/flags/ID.png');\r\n    this.game.load.image('IR', 'assets/flags/IR.png');\r\n    this.game.load.image('IQ', 'assets/flags/IQ.png');\r\n    this.game.load.image('IE', 'assets/flags/IE.png');\r\n    this.game.load.image('IM', 'assets/flags/IM.png');\r\n    this.game.load.image('IL', 'assets/flags/IL.png');\r\n    this.game.load.image('IT', 'assets/flags/IT.png');\r\n    this.game.load.image('JM', 'assets/flags/JM.png');\r\n    this.game.load.image('JP', 'assets/flags/JP.png');\r\n    this.game.load.image('JE', 'assets/flags/JE.png');\r\n    this.game.load.image('JO', 'assets/flags/JO.png');\r\n    this.game.load.image('KZ', 'assets/flags/KZ.png');\r\n    this.game.load.image('KE', 'assets/flags/KE.png');\r\n    this.game.load.image('KI', 'assets/flags/KI.png');\r\n    this.game.load.image('KP', 'assets/flags/KP.png');\r\n    this.game.load.image('KR', 'assets/flags/KR.png');\r\n    this.game.load.image('KW', 'assets/flags/KW.png');\r\n    this.game.load.image('KG', 'assets/flags/KG.png');\r\n    this.game.load.image('LA', 'assets/flags/LA.png');\r\n    this.game.load.image('LV', 'assets/flags/LV.png');\r\n    this.game.load.image('LB', 'assets/flags/LB.png');\r\n    this.game.load.image('LS', 'assets/flags/LS.png');\r\n    this.game.load.image('LR', 'assets/flags/LR.png');\r\n    this.game.load.image('LY', 'assets/flags/LY.png');\r\n    this.game.load.image('LI', 'assets/flags/LI.png');\r\n    this.game.load.image('LT', 'assets/flags/LT.png');\r\n    this.game.load.image('LU', 'assets/flags/LU.png');\r\n    this.game.load.image('MO', 'assets/flags/MO.png');\r\n    this.game.load.image('MK', 'assets/flags/MK.png');\r\n    this.game.load.image('MG', 'assets/flags/MG.png');\r\n    this.game.load.image('MW', 'assets/flags/MW.png');\r\n    this.game.load.image('MY', 'assets/flags/MY.png');\r\n    this.game.load.image('MV', 'assets/flags/MV.png');\r\n    this.game.load.image('ML', 'assets/flags/ML.png');\r\n    this.game.load.image('MT', 'assets/flags/MT.png');\r\n    this.game.load.image('MH', 'assets/flags/MH.png');\r\n    this.game.load.image('MQ', 'assets/flags/MQ.png');\r\n    this.game.load.image('MR', 'assets/flags/MR.png');\r\n    this.game.load.image('MU', 'assets/flags/MU.png');\r\n    this.game.load.image('YT', 'assets/flags/YT.png');\r\n    this.game.load.image('MX', 'assets/flags/MX.png');\r\n    this.game.load.image('FM', 'assets/flags/FM.png');\r\n    this.game.load.image('MD', 'assets/flags/MD.png');\r\n    this.game.load.image('MC', 'assets/flags/MC.png');\r\n    this.game.load.image('MN', 'assets/flags/MN.png');\r\n    this.game.load.image('ME', 'assets/flags/ME.png');\r\n    this.game.load.image('MS', 'assets/flags/MS.png');\r\n    this.game.load.image('MA', 'assets/flags/MA.png');\r\n    this.game.load.image('MZ', 'assets/flags/MZ.png');\r\n    this.game.load.image('MM', 'assets/flags/MM.png');\r\n    this.game.load.image('NA', 'assets/flags/NA.png');\r\n    this.game.load.image('NR', 'assets/flags/NR.png');\r\n    this.game.load.image('NP', 'assets/flags/NP.png');\r\n    this.game.load.image('NL', 'assets/flags/NL.png');\r\n    this.game.load.image('NC', 'assets/flags/NC.png');\r\n    this.game.load.image('NZ', 'assets/flags/NZ.png');\r\n    this.game.load.image('NI', 'assets/flags/NI.png');\r\n    this.game.load.image('NE', 'assets/flags/NE.png');\r\n    this.game.load.image('NG', 'assets/flags/NG.png');\r\n    this.game.load.image('NU', 'assets/flags/NU.png');\r\n    this.game.load.image('NF', 'assets/flags/NF.png');\r\n    this.game.load.image('MP', 'assets/flags/MP.png');\r\n    this.game.load.image('NO', 'assets/flags/NO.png');\r\n    this.game.load.image('OM', 'assets/flags/OM.png');\r\n    this.game.load.image('PK', 'assets/flags/PK.png');\r\n    this.game.load.image('PW', 'assets/flags/PW.png');\r\n    this.game.load.image('PS', 'assets/flags/PS.png');\r\n    this.game.load.image('PA', 'assets/flags/PA.png');\r\n    this.game.load.image('PG', 'assets/flags/PG.png');\r\n    this.game.load.image('PY', 'assets/flags/PY.png');\r\n    this.game.load.image('PE', 'assets/flags/PE.png');\r\n    this.game.load.image('PH', 'assets/flags/PH.png');\r\n    this.game.load.image('PN', 'assets/flags/PN.png');\r\n    this.game.load.image('PL', 'assets/flags/PL.png');\r\n    this.game.load.image('PT', 'assets/flags/PT.png');\r\n    this.game.load.image('PR', 'assets/flags/PR.png');\r\n    this.game.load.image('QA', 'assets/flags/QA.png');\r\n    this.game.load.image('RE', 'assets/flags/RE.png');\r\n    this.game.load.image('RO', 'assets/flags/RO.png');\r\n    this.game.load.image('RU', 'assets/flags/RU.png');\r\n    this.game.load.image('RW', 'assets/flags/RW.png');\r\n    this.game.load.image('BL', 'assets/flags/BL.png');\r\n    this.game.load.image('SH', 'assets/flags/SH.png');\r\n    this.game.load.image('KN', 'assets/flags/KN.png');\r\n    this.game.load.image('LC', 'assets/flags/LC.png');\r\n    this.game.load.image('MF', 'assets/flags/MF.png');\r\n    this.game.load.image('PM', 'assets/flags/PM.png');\r\n    this.game.load.image('VC', 'assets/flags/VC.png');\r\n    this.game.load.image('WS', 'assets/flags/WS.png');\r\n    this.game.load.image('SM', 'assets/flags/SM.png');\r\n    this.game.load.image('ST', 'assets/flags/ST.png');\r\n    this.game.load.image('SA', 'assets/flags/SA.png');\r\n    this.game.load.image('SN', 'assets/flags/SN.png');\r\n    this.game.load.image('RS', 'assets/flags/RS.png');\r\n    this.game.load.image('SC', 'assets/flags/SC.png');\r\n    this.game.load.image('SL', 'assets/flags/SL.png');\r\n    this.game.load.image('SG', 'assets/flags/SG.png');\r\n    this.game.load.image('SX', 'assets/flags/SX.png');\r\n    this.game.load.image('SK', 'assets/flags/SK.png');\r\n    this.game.load.image('SI', 'assets/flags/SI.png');\r\n    this.game.load.image('SB', 'assets/flags/SB.png');\r\n    this.game.load.image('SO', 'assets/flags/SO.png');\r\n    this.game.load.image('ZA', 'assets/flags/ZA.png');\r\n    this.game.load.image('GS', 'assets/flags/GS.png');\r\n    this.game.load.image('SS', 'assets/flags/SS.png');\r\n    this.game.load.image('ES', 'assets/flags/ES.png');\r\n    this.game.load.image('LK', 'assets/flags/LK.png');\r\n    this.game.load.image('SD', 'assets/flags/SD.png');\r\n    this.game.load.image('SR', 'assets/flags/SR.png');\r\n    this.game.load.image('SJ', 'assets/flags/SJ.png');\r\n    this.game.load.image('SZ', 'assets/flags/SZ.png');\r\n    this.game.load.image('SE', 'assets/flags/SE.png');\r\n    this.game.load.image('CH', 'assets/flags/CH.png');\r\n    this.game.load.image('SY', 'assets/flags/SY.png');\r\n    this.game.load.image('TW', 'assets/flags/TW.png');\r\n    this.game.load.image('TJ', 'assets/flags/TJ.png');\r\n    this.game.load.image('TZ', 'assets/flags/TZ.png');\r\n    this.game.load.image('TH', 'assets/flags/TH.png');\r\n    this.game.load.image('TL', 'assets/flags/TL.png');\r\n    this.game.load.image('TG', 'assets/flags/TG.png');\r\n    this.game.load.image('TK', 'assets/flags/TK.png');\r\n    this.game.load.image('TO', 'assets/flags/TO.png');\r\n    this.game.load.image('TT', 'assets/flags/TT.png');\r\n    this.game.load.image('TN', 'assets/flags/TN.png');\r\n    this.game.load.image('TR', 'assets/flags/TR.png');\r\n    this.game.load.image('TM', 'assets/flags/TM.png');\r\n    this.game.load.image('TC', 'assets/flags/TC.png');\r\n    this.game.load.image('TV', 'assets/flags/TV.png');\r\n    this.game.load.image('UG', 'assets/flags/UG.png');\r\n    this.game.load.image('UA', 'assets/flags/UA.png');\r\n    this.game.load.image('AE', 'assets/flags/AE.png');\r\n    this.game.load.image('GB', 'assets/flags/GB.png');\r\n    this.game.load.image('US', 'assets/flags/US.png');\r\n    this.game.load.image('UM', 'assets/flags/UM.png');\r\n    this.game.load.image('UY', 'assets/flags/UY.png');\r\n    this.game.load.image('UZ', 'assets/flags/UZ.png');\r\n    this.game.load.image('VU', 'assets/flags/VU.png');\r\n    this.game.load.image('VE', 'assets/flags/VE.png');\r\n    this.game.load.image('VN', 'assets/flags/VN.png');\r\n    this.game.load.image('VG', 'assets/flags/VG.png');\r\n    this.game.load.image('VI', 'assets/flags/VI.png');\r\n    this.game.load.image('WF', 'assets/flags/WF.png');\r\n    this.game.load.image('EH', 'assets/flags/EH.png');\r\n    this.game.load.image('YE', 'assets/flags/YE.png');\r\n    this.game.load.image('ZM', 'assets/flags/ZM.png');\r\n    this.game.load.image('ZW', 'assets/flags/ZW.png');\r\n\r\n    this.game.load.image('leftArrow', 'assets/images/leftArrow.png');\r\n    this.game.load.image('rightArrow', 'assets/images/rightArrow.png');\r\n    this.game.load.spritesheet('option', 'assets/images/options.png', 404, 304, 3);\r\n    this.game.load.image('btFlag', 'assets/images/bt2.png');\r\n    this.game.load.image('btBack', 'assets/images/back.png');\r\n    this.game.load.image('btHome', 'assets/images/options.png');\r\n    this.game.load.bitmapFont('myguifont', 'assets/fonts/guifont.png', 'assets/fonts/guifont.fnt');\r\n    this.game.load.spritesheet('lives', 'assets/images/lives.png', 324, 68, 5);\r\n    this.game.load.text('infoAF', 'assets/data/countries.json ');\r\n\r\n    this.game.load.audio('correct', 'assets/audio/correct.ogg');\r\n    this.game.load.audio('wrong', 'assets/audio/wrong.ogg');\r\n    this.game.load.audio('next', 'assets/audio/next.ogg');\r\n    this.game.load.audio('back', 'assets/audio/back.ogg');\r\n    this.game.load.audio('correct2', 'assets/audio/correct2.ogg');\r\n    this.game.load.audio('click', 'assets/audio/click.ogg');\r\n    this.game.load.audio('streak', 'assets/audio/streak.ogg');\r\n    this.game.load.audio('won', 'assets/audio/gamewon.ogg');\r\n    this.game.load.audio('over', 'assets/audio/gameover.ogg');\r\n\r\n  },\r\n\r\n  create: function () {\r\n    for (var i = 0; i < 5; i++) {\r\n      for (var j = 0; j < 5; j++) {\r\n        console.log('' + i + '' + j);\r\n        console.log(localStorage.getItem('' + i + '' + j));\r\n        if (localStorage.getItem('' + i + '' + j) == null) { }\r\n        else {\r\n          this.game.global.highscore[i][j] = localStorage.getItem('' + i + '' + j);\r\n        }\r\n      }\r\n      this.state.start('menuState');\r\n\r\n\r\n    }\r\n  }\r\n}\r\n","module.exports = {\r\n  preload: function () {\r\n  },\r\n\r\n  create: function () {\r\n    this.nextSound = this.game.add.audio('next');\r\n    this.backSound = this.game.add.audio('back');\r\n    this.clickSound = this.game.add.audio('click');\r\n\r\n    this.left = this.game.add.sprite(this.game.getScaledWidth(200), this.game.getScaledHeight(300), 'leftArrow');\r\n    this.left.height = this.game.getScaledHeight(this.left.height)\r\n    this.left.width = this.game.getScaledWidth(this.left.width);\r\n    this.left.anchor.set(0.5);\r\n    this.left.inputEnabled = true;\r\n    this.left.events.onInputDown.add(this.onLArrowClick, this);\r\n\r\n    this.right = this.game.add.sprite(this.game.getScaledWidth(1400), this.game.getScaledHeight(300), 'rightArrow');\r\n    this.right.height = this.game.getScaledHeight(this.right.height)\r\n    this.right.width = this.game.getScaledWidth(this.right.width);\r\n    this.right.anchor.set(0.5);\r\n    this.right.inputEnabled = true;\r\n    this.right.events.onInputDown.add(this.onRArrowClick, this);\r\n\r\n    var btCapital = this.game.add.sprite(this.game.getScaledWidth(500), this.game.getScaledHeight(500), 'btFlag');\r\n    btCapital.height = this.game.getScaledHeight(btCapital.height)\r\n    btCapital.width = this.game.getScaledWidth(btCapital.width);\r\n    btCapital.anchor.set(0.5);\r\n    btCapital.inputEnabled = true;\r\n    btCapital.events.onInputDown.add(this.startCapitalMode, this);\r\n\r\n    var btFlag = this.game.add.sprite(this.game.getScaledWidth(1100), this.game.getScaledHeight(500), 'btFlag');\r\n    btFlag.height = this.game.getScaledHeight(btFlag.height)\r\n    btFlag.width = this.game.getScaledWidth(btFlag.width);\r\n    btFlag.anchor.set(0.5);\r\n    btFlag.inputEnabled = true;\r\n    btFlag.events.onInputDown.add(this.startFlagMode, this);\r\n\r\n    var btPopulation = this.game.add.sprite(this.game.getScaledWidth(500), this.game.getScaledHeight(900), 'btFlag', this.game.getScaledHeight(50) );\r\n    btPopulation.height = this.game.getScaledHeight(btPopulation.height)\r\n    btPopulation.width = this.game.getScaledWidth(btPopulation.width);\r\n    btPopulation.anchor.set(0.5);\r\n    btPopulation.inputEnabled = true;\r\n    btPopulation.events.onInputDown.add(this.startPopulationMode, this);\r\n\r\n    var btCurrency = this.game.add.sprite(this.game.getScaledWidth(1100), this.game.getScaledHeight(900), 'btFlag', this.game.getScaledHeight(50) );\r\n    btCurrency.height = this.game.getScaledHeight(btCurrency.height)\r\n    btCurrency.width = this.game.getScaledWidth(btCurrency.width);\r\n    btCurrency.anchor.set(0.5);\r\n    btCurrency.inputEnabled = true;\r\n    btCurrency.events.onInputDown.add(this.startCurrencyMode, this);\r\n\r\n    var btLearn = this.game.add.sprite(this.world.centerX, this.game.getScaledHeight(700), 'btFlag', this.game.getScaledHeight(50) );\r\n    btLearn.height = this.game.getScaledHeight(btLearn.height)\r\n    btLearn.width = this.game.getScaledWidth(btLearn.width);\r\n    btLearn.anchor.set(0.5);\r\n    btLearn.inputEnabled = true;\r\n    btLearn.events.onInputDown.add(this.startLearnMode, this);\r\n\r\n    var btLearnText = this.game.add.bitmapText(this.world.centerX, this.game.getScaledHeight(700), 'myfont', 'Learn', this.game.getScaledHeight(50) );\r\n    btLearnText.anchor.set(0.5);\r\n\r\n    var btCapitalText = this.game.add.bitmapText(this.game.getScaledWidth(500), this.game.getScaledHeight(500), 'myfont', 'Capitals', this.game.getScaledHeight(50) );\r\n    btCapitalText.anchor.set(0.5);\r\n\r\n    var btFlagText = this.game.add.bitmapText(this.game.getScaledWidth(1100), this.game.getScaledHeight(500), 'myfont', 'Flags', this.game.getScaledHeight(50) );\r\n    btFlagText.anchor.set(0.5);\r\n\r\n    var btPopulationText = this.game.add.bitmapText(this.game.getScaledWidth(500), this.game.getScaledHeight(900), 'myfont', 'Population', this.game.getScaledHeight(50) );\r\n    btPopulationText.anchor.set(0.5);\r\n\r\n    var btCurrencyText = this.game.add.bitmapText(this.game.getScaledWidth(1100), this.game.getScaledHeight(900), 'myfont', 'Currency', this.game.getScaledHeight(50) );\r\n    btCurrencyText.anchor.set(0.5);\r\n\r\n    this.Continents = ['Africa', 'Americas', 'Asia', 'Australia', 'Europe'];\r\n    this.txtContinent = this.game.add.bitmapText(this.game.world.centerX, this.game.getScaledHeight(300), 'myfont', this.Continents[this.game.global.continentIndex], this.game.getScaledHeight(100) );\r\n    this.txtContinent.anchor.set(0.5);\r\n\r\n  },\r\n\r\n  onLArrowClick: function () {\r\n    this.backSound.play();\r\n    if (this.game.global.continentIndex <= 0) {\r\n      this.game.global.continentIndex = 5;\r\n    }\r\n    this.game.global.continentIndex -= 1;\r\n    this.txtContinent.setText(\"\" + this.Continents[this.game.global.continentIndex]);\r\n  },\r\n\r\n  onRArrowClick: function () {\r\n    this.nextSound.play();\r\n    if (this.game.global.continentIndex >= 4) {\r\n      this.game.global.continentIndex = -1;\r\n    }\r\n    this.game.global.continentIndex += 1;\r\n    this.txtContinent.setText(\"\" + this.Continents[this.game.global.continentIndex]);\r\n  },\r\n\r\n  startCapitalMode: function () {\r\n    this.clickSound.play();\r\n    this.alpha = 0.5;\r\n    //this.game.time.events.add(Phaser.Timer.SECOND * 0.2, this.correct, this);\r\n    this.state.start('capitalState');\r\n    this.game.global.modeIndex = 0;\r\n  },\r\n\r\n  startFlagMode: function () {\r\n    this.clickSound.play();\r\n    //this.updateModeArrays();\r\n    this.state.start('flagState');\r\n    this.game.global.modeIndex = 1;\r\n  },\r\n\r\n  startPopulationMode: function () {\r\n    console.log('outside');\r\n    this.clickSound.play();\r\n    // this.updateModeArrays();\r\n    this.state.start('populationState');\r\n    this.game.global.modeIndex = 2;\r\n  },\r\n  startCurrencyMode: function () {\r\n    console.log('outside');\r\n    this.clickSound.play();\r\n    // this.updateModeArrays();\r\n    this.state.start('currencyState');\r\n    this.game.global.modeIndex = 3;\r\n  },\r\n  startLearnMode: function () {\r\n    console.log('outside');\r\n    this.clickSound.play();\r\n    // this.updateModeArrays();\r\n    this.state.start('learnState');\r\n  },\r\n  updateModeArrays: function () {\r\n    this.game.global.modeArray = this.game.global.fullArray[this.game.global.modeIndex];\r\n  }\r\n};\r\n","module.exports = {\r\n  create: function () {\r\n    this.wonSound = this.game.add.audio('won');\r\n    this.wonSound.play();\r\n    this.continents = ['Africa', 'America', 'Asia', 'Australia', 'Europe'];\r\n    this.modes = ['Capitals', 'Flags', 'Population', 'Currency'];\r\n    this.states = ['capitalState', 'flagState', 'populationState', 'currencyState'];\r\n\r\n    this.clickSound = this.game.add.audio('click');\r\n\r\n    this.gameOverText1 = this.game.add.bitmapText(this.game.world.centerX, this.game.getScaledHeight(300), 'myguifont', 'You did it!', this.game.getScaledHeight(120) );\r\n    this.gameOverText1.anchor.set(0.5);\r\n    this.gameOverText2 = this.game.add.bitmapText(this.game.world.centerX, this.game.getScaledHeight(500) , 'myfont', \"You've mastered the \" + this.modes[this.game.global.modeIndex] + \" of \\n \" + this.continents[this.game.global.continentIndex], this.game.getScaledHeight(70) );\r\n    this.gameOverText2.anchor.set(0.5);\r\n    this.gameOverText2.align = 'center'\r\n\r\n    if (this.game.global.score > localStorage.getItem('' + this.game.global.continentIndex + '' + this.game.global.modeIndex)) {\r\n      localStorage.setItem('' + this.game.global.continentIndex + '' + this.game.global.modeIndex, this.game.global.score);\r\n      this.game.global.highscore[this.game.global.continentIndex][this.game.global.modeIndex] = this.game.global.score;\r\n    }\r\n\r\n    this.btRestart = this.game.add.sprite(this.game.getScaledWidth(1000) , this.game.getScaledHeight(800), this.game.global.modeButton[this.game.global.modeIndex]);\r\n    this.btRestart.height = this.game.getScaledHeight(this.btRestart.height)\r\n    this.btRestart.width = this.game.getScaledWidth(this.btRestart.width);\r\n    this.btRestart.anchor.set(0.5);\r\n    this.btRestart.inputEnabled = true;\r\n    this.btRestart.events.onInputDown.add(this.restart, this);\r\n    this.txtRestart = this.game.add.bitmapText(this.game.getScaledWidth(1000), this.game.getScaledHeight(800), 'myfont', 'Restart', this.game.getScaledHeight(50) );\r\n    this.txtRestart.anchor.set(0.5);\r\n\r\n    this.btHome = this.game.add.sprite(this.game.getScaledWidth(600), this.game.getScaledHeight(800), 'btFlag');\r\n    this.btHome.height = this.game.getScaledHeight(this.btHome.height)\r\n    this.btHome.width = this.game.getScaledWidth(this.btHome.width);\r\n    this.btHome.anchor.set(0.5);\r\n    this.btHome.inputEnabled = true;\r\n    this.btHome.events.onInputDown.add(this.home, this);\r\n    this.txtHome = this.game.add.bitmapText(this.game.getScaledWidth(600), this.game.getScaledHeight(800), 'myfont', 'Main Menu', this.game.getScaledHeight(50) );\r\n    this.txtHome.anchor.set(0.5);\r\n  },\r\n\r\n  restart: function () {\r\n    this.clickSound.play();\r\n    this.state.start(this.states[this.game.global.modeIndex]);\r\n  },\r\n\r\n  home: function () {\r\n    this.clickSound.play();\r\n    this.game.state.start('menuState');\r\n  }\r\n};\r\n","module.exports = {\r\n  preload: function () {\r\n  },\r\n\r\n  create: function () {\r\n    this.continents = ['Africa', 'America', 'Asia', 'Australia', 'Europe'];\r\n    this.modes = ['Capitals', 'Flags', 'Population', 'Currency'];\r\n    this.states = ['capitalState', 'flagState', 'populationState', 'currencyState'];\r\n\r\n    this.clickSound = this.game.add.audio('click');\r\n\r\n    if (this.game.global.score > localStorage.getItem('' + this.game.global.continentIndex + '' + this.game.global.modeIndex)) {\r\n      localStorage.setItem('' + this.game.global.continentIndex + '' + this.game.global.modeIndex, this.game.global.score);\r\n      this.game.global.highscore[this.game.global.continentIndex][this.game.global.modeIndex] = this.game.global.score;\r\n    }\r\n\r\n\r\n    this.gameOverText1 = this.game.add.bitmapText(this.game.world.centerX, this.game.getScaledHeight(300), 'myguifont', 'Game Over', this.game.getScaledHeight(120) );\r\n    this.gameOverText1.anchor.set(0.5);\r\n    this.gameOverText2 = this.game.add.bitmapText(this.game.world.centerX, this.game.getScaledHeight(420), 'myfont', 'Continent: ' + this.continents[this.game.global.continentIndex], this.game.getScaledHeight(70) );\r\n    this.gameOverText2.anchor.set(0.5);\r\n    this.gameOverText3 = this.game.add.bitmapText(this.game.world.centerX, this.game.getScaledHeight(500), 'myfont', 'Mode: ' + this.modes[this.game.global.modeIndex], this.game.getScaledHeight(70) );\r\n    this.gameOverText3.anchor.set(0.5);\r\n    this.gameOverText4 = this.game.add.bitmapText(this.game.world.centerX, this.game.getScaledHeight(580), 'myfont', 'Highscore: ' + this.game.global.highscore[this.game.global.continentIndex][this.game.global.modeIndex], this.game.getScaledHeight(70) );\r\n    this.gameOverText4.anchor.set(0.5);\r\n    this.gameOverText4 = this.game.add.bitmapText(this.game.world.centerX, this.game.getScaledHeight(660), 'myfont', 'Score: ' + this.game.global.score, this.game.getScaledHeight(70) );\r\n    this.gameOverText4.anchor.set(0.5);\r\n\r\n\r\n    this.btRestart = this.game.add.sprite(this.game.getScaledWidth(1000), this.game.getScaledHeight(800), 'btFlag');\r\n    this.btRestart.height = this.game.getScaledHeight(this.btRestart.height)\r\n    this.btRestart.width = this.game.getScaledWidth(this.btRestart.width);\r\n    this.btRestart.anchor.set(0.5);\r\n    this.btRestart.inputEnabled = true;\r\n    this.btRestart.events.onInputDown.add(this.restart, this);\r\n    this.txtRestart = this.game.add.bitmapText(this.game.getScaledWidth(1000), this.game.getScaledHeight(800), 'myfont', 'Restart', this.game.getScaledHeight(50) );\r\n    this.txtRestart.anchor.set(0.5);\r\n\r\n    this.btHome = this.game.add.sprite(this.game.getScaledWidth(600), this.game.getScaledHeight(800), 'btFlag');\r\n    this.btHome.height = this.game.getScaledHeight(this.btHome.height)\r\n    this.btHome.width = this.game.getScaledWidth(this.btHome.width);\r\n    this.btHome.anchor.set(0.5);\r\n    this.btHome.inputEnabled = true;\r\n    this.btHome.events.onInputDown.add(this.home, this);\r\n    this.txtHome = this.game.add.bitmapText(this.game.getScaledWidth(600), this.game.getScaledHeight(800), 'myfont', 'Main Menu', this.game.getScaledHeight(50) );\r\n    this.txtHome.anchor.set(0.5);\r\n\r\n    this.btFeedback = this.game.add.sprite(this.game.world.centerX, this.game.getScaledHeight(1000), 'btFlag');\r\n    this.btFeedback.height = this.game.getScaledHeight(this.btFeedback.height)\r\n    this.btFeedback.width = this.game.getScaledWidth(this.btFeedback.width);\r\n    this.btFeedback.anchor.set(0.5);\r\n    this.btFeedback.inputEnabled = true;\r\n    this.btFeedback.events.onInputDown.add(this.feedback, this);\r\n    this.btFeedback = this.game.add.bitmapText(this.game.world.centerX, this.game.getScaledHeight(1000), 'myfont', 'Feedback', this.game.getScaledHeight(50) );\r\n    this.btFeedback.maxWidth = 300;\r\n    this.btFeedback.align = 'center';\r\n    this.btFeedback.anchor.set(0.5);\r\n  },\r\n\r\n  restart: function () {\r\n    this.clickSound.play();\r\n    this.state.start(this.states[this.game.global.modeIndex]);\r\n  },\r\n  feedback: function () {\r\n    window.open(\"https://www.surveymonkey.co.uk/r/VJ7K3PX\", \"_blank\");\r\n  },\r\n\r\n  home: function () {\r\n    this.clickSound.play();\r\n    this.game.state.start('menuState');\r\n  }\r\n};\r\n","module.exports = {\r\n  create: function () {\r\n    this.game.global.score = 0;\r\n\r\n    this.correctSound = this.game.add.audio('correct');\r\n    this.correctSound2 = this.game.add.audio('correct2');\r\n    this.wrongSound = this.game.add.audio('wrong');\r\n    this.clickSound = this.game.add.audio('click');\r\n    this.overSound = this.game.add.audio('over');\r\n    this.wonSound = this.game.add.audio('won');\r\n    this.streakSound = this.game.add.audio('streak');\r\n\r\n    this.streak = 0;\r\n\r\n    this.txtScore = this.game.add.bitmapText(this.world.centerX, this.game.getScaledHeight(45), 'myguifont', \"SCORE: \" + this.game.global.score, this.game.getScaledHeight(60) );\r\n    this.txtScore.anchor.setTo(0.5, 0.5);\r\n\r\n    this.backBt = this.game.add.sprite(0, this.game.getScaledHeight(10), 'btBack');\r\n    this.backBt.height = this.game.getScaledHeight(this.backBt.height)\r\n    this.backBt.width = this.game.getScaledWidth(this.backBt.width);\r\n    this.backBt.inputEnabled = true;\r\n    this.backBt.events.onInputDown.add(this.home, this);\r\n    this.stats = { textS: \"\", textL: \"\", lives: 4 };\r\n\r\n    this.livesImage = this.game.add.sprite(this.game.getScaledWidth(1150), 0, 'lives');\r\n    this.livesImage.frame = 4;\r\n    this.livesImage.height = this.game.getScaledHeight(this.livesImage.height)\r\n    this.livesImage.width = this.game.getScaledWidth(this.livesImage.width);\r\n\r\n\r\n    this.ansPost = [{ flag: '', choice: '' }, { flag: '', choice: '' }, { flag: '', choice: '' }, { flag: '', choice: '' }];\r\n    this.countriesAF = this.game.global.fullArray[this.game.global.continentIndex].slice(0);\r\n    this.fullOptions = [];\r\n\r\n    this.getInfo;\r\n    this.answer;\r\n    this.options = [];\r\n    this.usedFlags = [];\r\n\r\n    //get states data from json\r\n    getInfo = JSON.parse(this.game.cache.getText('infoAF'));\r\n\r\n    this.questionLine1 = this.game.add.bitmapText(this.world.centerX, this.game.getScaledHeight(350), 'myfont', \"The flag of\", this.game.getScaledHeight(80) );\r\n    this.questionLine2 = this.game.add.bitmapText(this.world.centerX, this.game.getScaledHeight(450), 'myfont', \"Democratic Republic of the Congo is ?\", this.game.getScaledHeight(80) );\r\n    this.questionLine1.anchor.set(0.5);\r\n    this.questionLine2.anchor.set(0.5);\r\n\r\n    var index = 0;\r\n    var optYPos = 700;\r\n    var optXPos = 580;\r\n\r\n    this.ansPost[0] = this.game.add.sprite(this.game.getScaledWidth(580), this.game.getScaledHeight(700), 'option');\r\n    this.ansPost[0].height = this.game.getScaledHeight(this.ansPost[0].height)\r\n    this.ansPost[0].width = this.game.getScaledWidth(this.ansPost[0].width);\r\n    this.ansPost[0].anchor.setTo(0.5);\r\n    this.ansPost[0].inputEnabled = true;\r\n    this.ansPost[0].events.onInputDown.add(this.checkChoice, this);\r\n\r\n    this.ansPost[1] = this.game.add.sprite(this.game.getScaledWidth(1000), this.game.getScaledHeight(700), 'option');\r\n    this.ansPost[1].height = this.game.getScaledHeight(this.ansPost[1].height)\r\n    this.ansPost[1].width = this.game.getScaledWidth(this.ansPost[1].width);\r\n    this.ansPost[1].anchor.setTo(0.5);\r\n    this.ansPost[1].scale.x *= -1;\r\n    this.ansPost[1].inputEnabled = true;\r\n    this.ansPost[1].events.onInputDown.add(this.checkChoice, this);\r\n\r\n    this.ansPost[2] = this.game.add.sprite(this.game.getScaledWidth(580), this.game.getScaledHeight(1020), 'option');\r\n    this.ansPost[2].height = this.game.getScaledHeight(this.ansPost[2].height)\r\n    this.ansPost[2].width = this.game.getScaledWidth(this.ansPost[2].width);\r\n    this.ansPost[2].anchor.setTo(0.5);\r\n    this.ansPost[2].scale.y *= -1;\r\n    this.ansPost[2].inputEnabled = true;\r\n    this.ansPost[2].events.onInputDown.add(this.checkChoice, this);\r\n\r\n    this.ansPost[3] = this.game.add.sprite(this.game.getScaledWidth(1000), this.game.getScaledHeight(1020), 'option');\r\n    this.ansPost[3].height = this.game.getScaledHeight(this.ansPost[3].height)\r\n    this.ansPost[3].width = this.game.getScaledWidth(this.ansPost[3].width);\r\n    this.ansPost[3].anchor.setTo(0.5);\r\n    this.ansPost[3].scale.x *= -1;\r\n    this.ansPost[3].scale.y *= -1;\r\n    this.ansPost[3].inputEnabled = true;\r\n    this.ansPost[3].events.onInputDown.add(this.checkChoice, this);\r\n\r\n    this.nextQuestion();\r\n  },\r\n\r\n  setFlags: function (data) {\r\n    console.log('create options');\r\n    var index = 0;\r\n    var optXPos = this.game.getScaledWidth(580);\r\n    var optYPos = this.game.getScaledHeight(700);\r\n\r\n    for (var i = 0; i < 2; i++) {\r\n      for (var j = 0; j < 2; j++) {\r\n        this.ansPost[index].flag = this.game.add.sprite(optXPos, optYPos, data[index]);\r\n        this.ansPost[index].flag.height = this.game.getScaledHeight(this.ansPost[index].flag.height)\r\n        this.ansPost[index].flag.width = this.game.getScaledWidth(this.ansPost[index].flag.width);\r\n        this.ansPost[index].flag.anchor.setTo(0.5);\r\n        this.ansPost[index].choice = data[index];\r\n        optXPos += this.game.getScaledWidth(420);\r\n        index += 1;\r\n      }\r\n      optXPos = this.game.getScaledWidth(580);\r\n      optYPos += this.game.getScaledHeight(320);\r\n    }\r\n  },\r\n\r\n  home: function () {\r\n    this.clickSound.play();\r\n    this.game.state.start('menuState');\r\n  },\r\n\r\n\r\n  checkChoice: function (choice) {\r\n    if (this.answer == choice.choice) {\r\n      choice.frame = 1;\r\n      this.correctSound.play();\r\n      this.game.time.events.add(Phaser.Timer.SECOND * 0.2, this.correct, this);\r\n    }\r\n    else {\r\n      choice.frame = 2;\r\n      this.wrong();\r\n    }\r\n  },\r\n\r\n  wrong: function () {\r\n\r\n    if (this.stats.lives <= 0) {\r\n      this.overSound.play();\r\n      this.livesImage.alpha = 0;\r\n      for (var m = 0; m < 4; m++) {\r\n        this.ansPost[m].inputEnabled = false;\r\n        if (this.ansPost[m].choice == this.answer) {\r\n          this.ansPost[m].frame = 1;\r\n        }\r\n      }\r\n      this.game.time.events.add(Phaser.Timer.SECOND * 3, this.gameover, this);\r\n    }\r\n    else {\r\n      this.wrongSound.play();\r\n      this.stats.lives -= 1;\r\n      this.streak = 0;\r\n      this.livesImage.frame = this.stats.lives;\r\n    }\r\n\r\n  },\r\n\r\n  gameover: function () {\r\n    this.game.state.start('gameOver');\r\n  },\r\n\r\n  correct: function () {\r\n    this.game.global.score += 1;\r\n    this.txtScore.setText(\"SCORE: \" + this.game.global.score);\r\n    this.streak += 1;\r\n    if (this.streak >= 3) { this.bonus(); }\r\n    this.countriesAF.pop();\r\n    this.reset();\r\n    this.nextQuestion();\r\n  },\r\n\r\n  bonus: function () {\r\n    this.streak = 0;\r\n    if (this.stats.lives < 4) {\r\n      this.streakSound.play();\r\n      this.stats.lives += 1;\r\n      this.livesImage.frame = this.stats.lives;\r\n    }\r\n  },\r\n  reset: function () {\r\n    for (var i = 0; i < 4; i++) {\r\n      this.ansPost[i].flag.destroy();\r\n      this.ansPost[i].frame = 0;\r\n    }\r\n    this.options = [];\r\n  },\r\n\r\n  nextQuestion: function () {\r\n    Phaser.ArrayUtils.shuffle(this.countriesAF);\r\n    var index = this.countriesAF[this.countriesAF.length - 1];\r\n    console.log(\"question: \" + index);\r\n    var queCountry = getInfo[index];\r\n    this.questionLine2.setText(queCountry.name + \" is?\");\r\n    this.answer = index;\r\n    this.usedFlags.push(this.answer);\r\n    this.options.push(this.answer);\r\n    if (this.countriesAF.length <= 3) {\r\n      Phaser.ArrayUtils.shuffle(this.usedFlags);\r\n      for (var i = 2; i < 5; i++) {\r\n        this.options.push(this.usedFlags[i]);\r\n      }\r\n    }\r\n    else {\r\n      for (var i = 2; i < 5; i++) {\r\n        this.options.push(this.countriesAF[this.countriesAF.length - i]);\r\n      }\r\n    }\r\n    Phaser.ArrayUtils.shuffle(this.options);\r\n    console.log(this.options);\r\n\r\n    this.setFlags(this.options);\r\n  },\r\n};\r\n","module.exports = {\r\n  create: function () {\r\n    this.game.global.score = 0;\r\n    this.usedCapitals = [];\r\n    this.ansPost = [{ text: '', choice: '' }, { text: '', choice: '' }, { text: '', choice: '' }, { text: '', choice: '' }];\r\n    this.countriesAF = this.game.global.fullArray[this.game.global.continentIndex].slice(0);\r\n    this.currencyOptions = this.game.global.fullArray[this.game.global.continentIndex].slice(0);\r\n    console.log(this.game.global.continentIndex);\r\n    console.log(this.game.global.fullArray[this.game.global.continentIndex]);\r\n\r\n    this.streak = 0;\r\n\r\n    this.getInfo;\r\n    this.answer;\r\n    this.options = [];\r\n\r\n    this.correctSound = this.game.add.audio('correct');\r\n    this.correctSound2 = this.game.add.audio('correct2');\r\n    this.wrongSound = this.game.add.audio('wrong');\r\n    this.clickSound = this.game.add.audio('click');\r\n    this.overSound = this.game.add.audio('over');\r\n    this.wonSound = this.game.add.audio('won');\r\n    this.streakSound = this.game.add.audio('streak');\r\n\r\n    //get states data from json\r\n    getInfo = JSON.parse(this.game.cache.getText('infoAF'));\r\n\r\n    this.questionLine1 = this.game.add.bitmapText(this.world.centerX, this.game.getScaledHeight(450), 'myfont', \"What is Democratic Republic of the Congo's\", this.game.getScaledHeight(80) );\r\n    this.questionLine1.anchor.set(0.5);\r\n\r\n\r\n    this.stats = { textS: \"\", lives: 4 };\r\n\r\n    this.txtScore = this.game.add.bitmapText(this.world.centerX, this.game.getScaledHeight(45), 'myguifont', \"SCORE: \" + this.game.global.score, this.game.getScaledHeight(60) );\r\n    this.txtScore.anchor.setTo(0.5, 0.5);\r\n\r\n\r\n    this.backBt = this.game.add.sprite(0, this.game.getScaledHeight(10), 'btBack');\r\n    this.backBt.height = this.game.getScaledHeight(this.backBt.height)\r\n    this.backBt.width = this.game.getScaledWidth(this.backBt.width);\r\n    this.backBt.inputEnabled = true;\r\n    this.backBt.events.onInputDown.add(this.home, this);\r\n\r\n    this.livesImage = this.game.add.sprite(this.game.getScaledWidth(1276), 0, 'lives');\r\n    this.livesImage.frame = 4;\r\n    this.livesImage.height = this.game.getScaledHeight(this.livesImage.height)\r\n    this.livesImage.width = this.game.getScaledWidth(this.livesImage.width);\r\n\r\n    //stats.text.anchor.setTo(0.5,0.5);\r\n\r\n    var index = 0;\r\n    var optYPos = this.game.getScaledHeight(700);\r\n    var optXPos = this.game.getScaledWidth(580);\r\n\r\n    this.ansPost[0] = this.game.add.sprite(this.game.getScaledWidth(580), this.game.getScaledHeight(700), 'option');\r\n    this.ansPost[0].height = this.game.getScaledHeight(this.ansPost[0].height)\r\n    this.ansPost[0].width = this.game.getScaledWidth(this.ansPost[0].width);\r\n    this.ansPost[0].anchor.setTo(0.5);\r\n\r\n    this.ansPost[1] = this.game.add.sprite(this.game.getScaledWidth(1000), this.game.getScaledHeight(700), 'option');\r\n    this.ansPost[1].height = this.game.getScaledHeight(this.ansPost[1].height)\r\n    this.ansPost[1].width = this.game.getScaledWidth(this.ansPost[1].width);\r\n    this.ansPost[1].anchor.setTo(0.5);\r\n    this.ansPost[1].scale.x *= -1;\r\n\r\n    this.ansPost[2] = this.game.add.sprite(this.game.getScaledWidth(580), this.game.getScaledHeight(1020), 'option');\r\n    this.ansPost[2].height = this.game.getScaledHeight(this.ansPost[2].height)\r\n    this.ansPost[2].width = this.game.getScaledWidth(this.ansPost[2].width);\r\n    this.ansPost[2].anchor.setTo(0.5);\r\n    this.ansPost[2].scale.y *= -1;\r\n\r\n    this.ansPost[3] = this.game.add.sprite(this.game.getScaledWidth(1000), this.game.getScaledHeight(1020), 'option');\r\n    this.ansPost[3].height = this.game.getScaledHeight(this.ansPost[3].height)\r\n    this.ansPost[3].width = this.game.getScaledWidth(this.ansPost[3].width);\r\n    this.ansPost[3].anchor.setTo(0.5);\r\n    this.ansPost[3].scale.x *= -1;\r\n    this.ansPost[3].scale.y *= -1;\r\n\r\n    for (var j = 0; j < 2; j++) {\r\n      for (var i = 0; i < 2; i++) {\r\n        this.ansPost[index].text = this.game.add.bitmapText(optXPos, optYPos, 'myfont', '', this.game.getScaledHeight(45) );\r\n        this.ansPost[index].text.maxWidth = 300;\r\n        this.ansPost[index].text.anchor.setTo(0.5);\r\n        this.ansPost[index].text.align = 'center'\r\n        this.ansPost[index].inputEnabled = true;\r\n        this.ansPost[index].events.onInputDown.add(this.checkChoice, this);\r\n        optXPos += this.game.getScaledWidth(420);\r\n        index += 1;\r\n      }\r\n      optYPos += this.game.getScaledHeight(320);\r\n      optXPos = this.game.getScaledWidth(580);\r\n    }\r\n\r\n    this.nextQuestion();\r\n  },\r\n\r\n  update: function () {\r\n\r\n  },\r\n\r\n  home: function () {\r\n    this.clickSound.play();\r\n    this.game.state.start('menuState');\r\n  },\r\n\r\n  checkChoice: function (choice) {\r\n    if (this.answer == choice.choice) {\r\n      this.correctSound.play();\r\n      choice.frame = 1;\r\n      this.game.time.events.add(Phaser.Timer.SECOND * 0.2, this.correct, this);\r\n    }\r\n    else {\r\n      this.wrong();\r\n      choice.frame = 2;\r\n    }\r\n  },\r\n\r\n  wrong: function () {\r\n\r\n    if (this.stats.lives <= 0) {\r\n      this.overSound.play();\r\n      this.livesImage.alpha = 0;\r\n      for (var m = 0; m < 4; m++) {\r\n        this.ansPost[m].inputEnabled = false;\r\n        if (this.ansPost[m].choice == this.answer) {\r\n          this.ansPost[m].frame = 1;\r\n        }\r\n      }\r\n      this.game.time.events.add(Phaser.Timer.SECOND * 3, this.gameover, this);\r\n    }\r\n    else {\r\n      this.wrongSound.play();\r\n      this.stats.lives -= 1;\r\n      this.streak = 0;\r\n      this.livesImage.frame = this.stats.lives;\r\n    }\r\n\r\n  },\r\n  gameover: function () {\r\n    this.game.state.start('gameOver');\r\n  },\r\n\r\n  correct: function () {\r\n    console.log(\"remaining: \" + this.countriesAF.length);\r\n    if (this.countriesAF.length <= 1) {\r\n      this.game.state.start('winState');\r\n    }\r\n    else {\r\n      this.game.global.score += 1;\r\n      this.txtScore.setText('SCORE: ' + this.game.global.score);\r\n      this.streak += 1;\r\n      if (this.streak >= 3) { this.bonus(); }\r\n      this.countriesAF.pop()\r\n      this.nextQuestion();\r\n    }\r\n    console.log(this.streak);\r\n  },\r\n\r\n  bonus: function () {\r\n    this.streak = 0;\r\n    if (this.stats.lives < 4) {\r\n      this.streakSound.play();\r\n      this.stats.lives += 1;\r\n      this.livesImage.frame = this.stats.lives;\r\n    }\r\n  },\r\n  reset: function () {\r\n    for (var i = 0; i < 4; i++) {\r\n      this.ansPost[i].frame = 0;\r\n      this.ansPost[i].inputEnabled = true;\r\n    }\r\n    this.options = [];\r\n\r\n  },\r\n  nextQuestion: function () {\r\n    this.reset();\r\n    Phaser.ArrayUtils.shuffle(this.countriesAF);\r\n    var queCountry = getInfo[this.countriesAF[this.countriesAF.length - 1]];\r\n    this.questionLine1.setText(\"What is \" + queCountry.name + \"'s main currency?\");\r\n    this.questionLine1.maxWidth = 1500;\r\n    this.questionLine1.align = 'center';\r\n    this.answer = queCountry.currency;\r\n    this.usedCapitals.push(this.answer);\r\n    this.options.push(this.answer);\r\n\r\n    Phaser.ArrayUtils.shuffle(this.currencyOptions);\r\n    this.count = 0;\r\n    for (var i = 1; i < this.currencyOptions.length; i++) {\r\n      this.checkoption = getInfo[this.currencyOptions[i]].currency;\r\n      if (this.checkoption == this.answer) { }\r\n      else {\r\n        this.options.push(this.checkoption);\r\n        this.count += 1;\r\n      }\r\n      if (this.count >= 3) {\r\n        break;\r\n      }\r\n\r\n    }\r\n\r\n    Phaser.ArrayUtils.shuffle(this.options);\r\n\r\n    for (var i = 0; i < 4; i++) {\r\n      this.ansPost[i].text.setText(this.options[i]);\r\n      this.ansPost[i].choice = this.options[i];\r\n    }\r\n\r\n  },\r\n};\r\n","module.exports = {\r\n  create: function () {\r\n    console.log('inside');\r\n    this.game.global.score = 0;\r\n    this.usedPopulation = [];\r\n    this.ansPost = [{ text: '', choice: '' }, { text: '', choice: '' }, { text: '', choice: '' }, { text: '', choice: '' }];\r\n    this.countriesAF = this.game.global.fullArray[this.game.global.continentIndex].slice(0);\r\n    console.log(this.game.global.continentIndex);\r\n    console.log(this.game.global.fullArray[this.game.global.continentIndex]);\r\n\r\n    this.streak = 0;\r\n\r\n    this.getInfo;\r\n    this.answer;\r\n    this.options = [];\r\n\r\n    this.correctSound = this.game.add.audio('correct');\r\n    this.correctSound2 = this.game.add.audio('correct2');\r\n    this.wrongSound = this.game.add.audio('wrong');\r\n    this.clickSound = this.game.add.audio('click');\r\n    this.overSound = this.game.add.audio('over');\r\n    this.streakSound = this.game.add.audio('streak');\r\n\r\n\r\n    //get states data from json\r\n    getInfo = JSON.parse(this.game.cache.getText('infoAF'));\r\n\r\n    this.questionLine1 = this.game.add.bitmapText(this.world.centerX, this.game.getScaledHeight(350), 'myfont', \"The population of\", this.game.getScaledHeight(80) );\r\n    this.questionLine2 = this.game.add.bitmapText(this.world.centerX, this.game.getScaledHeight(450), 'myfont', \"Democratic Republic of the Congo is ?\", this.game.getScaledHeight(80) );\r\n    this.questionLine1.anchor.set(0.5);\r\n    this.questionLine2.anchor.set(0.5);\r\n\r\n\r\n    this.stats = { textS: \"\", lives: 4 };\r\n\r\n    this.txtScore = this.game.add.bitmapText(this.world.centerX, this.game.getScaledHeight(45), 'myguifont', \"SCORE: \" + this.game.global.score, this.game.getScaledHeight(60) );\r\n    this.txtScore.anchor.setTo(0.5, 0.5);\r\n\r\n\r\n    this.backBt = this.game.add.sprite(0, this.game.getScaledHeight(10), 'btBack');\r\n    this.backBt.height = this.game.getScaledHeight(this.backBt.height)\r\n    this.backBt.width = this.game.getScaledWidth(this.backBt.width);\r\n    this.backBt.inputEnabled = true;\r\n    this.backBt.events.onInputDown.add(this.home, this);\r\n\r\n    this.livesImage = this.game.add.sprite(this.game.getScaledWidth(1276), 0, 'lives');\r\n    this.livesImage.frame = 4;\r\n    this.livesImage.height = this.game.getScaledHeight(this.livesImage.height)\r\n    this.livesImage.width = this.game.getScaledWidth(this.livesImage.width);\r\n\r\n    //stats.text.anchor.setTo(0.5,0.5);\r\n\r\n    var index = 0;\r\n    var optYPos = this.game.getScaledHeight(700);\r\n    var optXPos = this.game.getScaledWidth(580);\r\n\r\n    this.ansPost[0] = this.game.add.sprite(this.game.getScaledWidth(580), this.game.getScaledHeight(700), 'option');\r\n    this.ansPost[0].height = this.game.getScaledHeight(this.ansPost[0].height)\r\n    this.ansPost[0].width = this.game.getScaledWidth(this.ansPost[0].width);\r\n    this.ansPost[0].anchor.setTo(0.5);\r\n\r\n    this.ansPost[1] = this.game.add.sprite(this.game.getScaledWidth(1000), this.game.getScaledHeight(700), 'option');\r\n    this.ansPost[1].height = this.game.getScaledHeight(this.ansPost[1].height)\r\n    this.ansPost[1].width = this.game.getScaledWidth(this.ansPost[1].width);\r\n    this.ansPost[1].anchor.setTo(0.5);\r\n    this.ansPost[1].scale.x *= -1;\r\n\r\n    this.ansPost[2] = this.game.add.sprite(this.game.getScaledWidth(580), this.game.getScaledHeight(1020), 'option');\r\n    this.ansPost[2].height = this.game.getScaledHeight(this.ansPost[2].height)\r\n    this.ansPost[2].width = this.game.getScaledWidth(this.ansPost[2].width);\r\n    this.ansPost[2].anchor.setTo(0.5);\r\n    this.ansPost[2].scale.y *= -1;\r\n\r\n    this.ansPost[3] = this.game.add.sprite(this.game.getScaledWidth(1000), this.game.getScaledHeight(1020), 'option');\r\n    this.ansPost[3].height = this.game.getScaledHeight(this.ansPost[3].height)\r\n    this.ansPost[3].width = this.game.getScaledWidth(this.ansPost[3].width);\r\n    this.ansPost[3].anchor.setTo(0.5);\r\n    this.ansPost[3].scale.x *= -1;\r\n    this.ansPost[3].scale.y *= -1;\r\n\r\n    for (var j = 0; j < 2; j++) {\r\n      for (var i = 0; i < 2; i++) {\r\n        this.ansPost[index].text = this.game.add.bitmapText(optXPos, optYPos, 'myfont', '', this.game.getScaledHeight(45) );\r\n        this.ansPost[index].text.maxWidth = 300;\r\n        this.ansPost[index].text.anchor.setTo(0.5);\r\n        this.ansPost[index].text.align = 'center'\r\n        this.ansPost[index].inputEnabled = true;\r\n        this.ansPost[index].events.onInputDown.add(this.checkChoice, this);\r\n        optXPos += this.game.getScaledWidth(420);\r\n        index += 1;\r\n      }\r\n      optYPos += this.game.getScaledHeight(320);\r\n      optXPos = this.game.getScaledWidth(580);\r\n    }\r\n\r\n    this.nextQuestion();\r\n  },\r\n\r\n  update: function () {\r\n\r\n  },\r\n\r\n  home: function () {\r\n    this.clickSound.play();\r\n    this.game.state.start('menuState');\r\n  },\r\n\r\n  checkChoice: function (choice) {\r\n    if (this.answer == choice.choice) {\r\n      this.correctSound.play();\r\n      choice.frame = 1;\r\n      this.game.time.events.add(Phaser.Timer.SECOND * 0.2, this.correct, this);\r\n    }\r\n    else {\r\n      this.wrong();\r\n      choice.frame = 2;\r\n    }\r\n  },\r\n\r\n  wrong: function () {\r\n\r\n    if (this.stats.lives <= 0) {\r\n      this.livesImage.alpha = 0;\r\n      this.overSound.play();\r\n      for (var m = 0; m < 4; m++) {\r\n        this.ansPost[m].inputEnabled = false;\r\n        if (this.ansPost[m].choice == this.answer) {\r\n          this.ansPost[m].frame = 1;\r\n        }\r\n      }\r\n      this.game.time.events.add(Phaser.Timer.SECOND * 3, this.gameover, this);\r\n    }\r\n    else {\r\n      this.wrongSound.play();\r\n      this.stats.lives -= 1;\r\n      this.streak = 0;\r\n      this.livesImage.frame = this.stats.lives;\r\n    }\r\n\r\n  },\r\n  gameover: function () {\r\n    this.game.state.start('gameOver');\r\n  },\r\n\r\n  correct: function () {\r\n    console.log(\"remaining: \" + this.countriesAF.length);\r\n    if (this.countriesAF.length <= 1) {\r\n      this.game.state.start('winState');\r\n    }\r\n    else {\r\n      this.game.global.score += 1;\r\n      this.txtScore.setText('SCORE: ' + this.game.global.score);\r\n      this.streak += 1;\r\n      if (this.streak >= 3) { this.bonus(); }\r\n      this.countriesAF.pop()\r\n      this.nextQuestion();\r\n    }\r\n    console.log(this.streak);\r\n  },\r\n\r\n  bonus: function () {\r\n    this.streak = 0;\r\n    if (this.stats.lives < 4) {\r\n      this.streakSound.play();\r\n      this.stats.lives += 1;\r\n      this.livesImage.frame = this.stats.lives;\r\n    }\r\n  },\r\n  reset: function () {\r\n    for (var i = 0; i < 4; i++) {\r\n      this.ansPost[i].frame = 0;\r\n      this.ansPost[i].inputEnabled = true;\r\n    }\r\n    this.options = [];\r\n\r\n  },\r\n  nextQuestion: function () {\r\n    this.reset();\r\n    Phaser.ArrayUtils.shuffle(this.countriesAF);\r\n    var queCountry = getInfo[this.countriesAF[this.countriesAF.length - 1]];\r\n    this.questionLine2.setText(queCountry.name + \" is?\");\r\n    this.answer = queCountry.population;\r\n    this.usedPopulation.push(this.answer);\r\n    this.options.push(this.answer);\r\n\r\n    if (this.countriesAF.length <= 3) {\r\n      Phaser.ArrayUtils.shuffle(this.usedPopulation);\r\n      for (var i = 2; i < 5; i++) {\r\n        this.options.push(this.usedPopulation[i]);\r\n      }\r\n    }\r\n    else {\r\n      for (var i = 2; i < 5; i++) {\r\n        this.options.push(getInfo[this.countriesAF[this.countriesAF.length - i]].population);\r\n      }\r\n\r\n    }\r\n    Phaser.ArrayUtils.shuffle(this.options);\r\n\r\n    for (var i = 0; i < 4; i++) {\r\n      this.ansPost[i].text.setText(this.options[i]);\r\n      this.ansPost[i].choice = this.options[i];\r\n    }\r\n\r\n  },\r\n};\r\n","module.exports = {\r\n  create: function () {\r\n    this.game.global.score = 0;\r\n    this.usedCapitals = [];\r\n    this.ansPost = [{ text: '', choice: '' }, { text: '', choice: '' }, { text: '', choice: '' }, { text: '', choice: '' }];\r\n    this.countriesAF = this.game.global.fullArray[this.game.global.continentIndex].slice(0);\r\n    console.log(this.game.global.continentIndex);\r\n    console.log(this.game.global.fullArray[this.game.global.continentIndex]);\r\n\r\n    this.streak = 0;\r\n\r\n    this.getInfo;\r\n    this.answer;\r\n    this.options = [];\r\n\r\n    this.correctSound = this.game.add.audio('correct');\r\n    this.correctSound2 = this.game.add.audio('correct2');\r\n    this.wrongSound = this.game.add.audio('wrong');\r\n    this.clickSound = this.game.add.audio('click');\r\n    this.overSound = this.game.add.audio('over');\r\n    this.wonSound = this.game.add.audio('won');\r\n    this.streakSound = this.game.add.audio('streak');\r\n\r\n    //get states data from json\r\n    getInfo = JSON.parse(this.game.cache.getText('infoAF'));\r\n\r\n    this.questionLine1 = this.game.add.bitmapText(this.world.centerX, this.game.getScaledHeight(350), 'myfont', \"The capital of\", this.game.getScaledHeight(80));\r\n    this.questionLine2 = this.game.add.bitmapText(this.world.centerX, this.game.getScaledHeight(450), 'myfont', \"Democratic Republic of the Congo is ?\", this.game.getScaledHeight(80));\r\n    this.questionLine1.anchor.set(0.5);\r\n    this.questionLine2.anchor.set(0.5);\r\n\r\n\r\n    this.stats = { textS: \"\", lives: 4 };\r\n\r\n    this.txtScore = this.game.add.bitmapText(this.world.centerX, this.game.getScaledHeight(45), 'myguifont', \"SCORE: \" + this.game.global.score, this.game.getScaledHeight(60));\r\n    this.txtScore.anchor.setTo(0.5, 0.5);\r\n\r\n\r\n    this.backBt = this.game.add.sprite(0, this.game.getScaledHeight(10), 'btBack');\r\n    this.backBt.height = this.game.getScaledHeight(this.backBt.height)\r\n    this.backBt.width = this.game.getScaledWidth(this.backBt.width);\r\n    this.backBt.inputEnabled = true;\r\n    this.backBt.events.onInputDown.add(this.home, this);\r\n\r\n    this.livesImage = this.game.add.sprite(this.game.getScaledWidth(1276), 0, 'lives');\r\n    this.livesImage.frame = 4;\r\n    this.livesImage.height = this.game.getScaledHeight(this.livesImage.height)\r\n    this.livesImage.width = this.game.getScaledWidth(this.livesImage.width);\r\n\r\n    //stats.text.anchor.setTo(0.5,0.5);\r\n\r\n    var index = 0;\r\n    var optYPos = this.game.getScaledHeight(700);\r\n    var optXPos = this.game.getScaledWidth(580);\r\n\r\n    this.ansPost[0] = this.game.add.sprite(this.game.getScaledWidth(580), this.game.getScaledHeight(700), 'option');\r\n    this.ansPost[0].height = this.game.getScaledHeight(this.ansPost[0].height)\r\n    this.ansPost[0].width = this.game.getScaledWidth(this.ansPost[0].width);\r\n    this.ansPost[0].anchor.setTo(0.5);\r\n\r\n    this.ansPost[1] = this.game.add.sprite(this.game.getScaledWidth(1000), this.game.getScaledHeight(700), 'option');\r\n    this.ansPost[1].height = this.game.getScaledHeight(this.ansPost[1].height)\r\n    this.ansPost[1].width = this.game.getScaledWidth(this.ansPost[1].width);\r\n    this.ansPost[1].anchor.setTo(0.5);\r\n    this.ansPost[1].scale.x *= -1;\r\n\r\n    this.ansPost[2] = this.game.add.sprite(this.game.getScaledWidth(580), this.game.getScaledHeight(1020), 'option');\r\n    this.ansPost[2].height = this.game.getScaledHeight(this.ansPost[2].height)\r\n    this.ansPost[2].width = this.game.getScaledWidth(this.ansPost[2].width);\r\n    this.ansPost[2].anchor.setTo(0.5);\r\n    this.ansPost[2].scale.y *= -1;\r\n\r\n    this.ansPost[3] = this.game.add.sprite(this.game.getScaledWidth(1000), this.game.getScaledHeight(1020), 'option');\r\n    this.ansPost[3].height = this.game.getScaledHeight(this.ansPost[3].height)\r\n    this.ansPost[3].width = this.game.getScaledWidth(this.ansPost[3].width);\r\n    this.ansPost[3].anchor.setTo(0.5);\r\n    this.ansPost[3].scale.x *= -1;\r\n    this.ansPost[3].scale.y *= -1;\r\n\r\n    for (var j = 0; j < 2; j++) {\r\n      for (var i = 0; i < 2; i++) {\r\n        this.ansPost[index].text = this.game.add.bitmapText(optXPos, optYPos, 'myfont', '', this.game.getScaledHeight(45));\r\n        this.ansPost[index].text.maxWidth = 300;\r\n        this.ansPost[index].text.anchor.setTo(0.5);\r\n        this.ansPost[index].text.align = 'center'\r\n        this.ansPost[index].inputEnabled = true;\r\n        this.ansPost[index].events.onInputDown.add(this.checkChoice, this);\r\n        optXPos += this.game.getScaledWidth(420);\r\n        index += 1;\r\n      }\r\n      optYPos += this.game.getScaledHeight(320);\r\n      optXPos = this.game.getScaledWidth(580);\r\n    }\r\n\r\n\r\n\r\n    this.nextQuestion();\r\n  },\r\n\r\n  update: function () {\r\n\r\n  },\r\n\r\n  home: function () {\r\n    this.clickSound.play();\r\n    this.game.state.start('menuState');\r\n  },\r\n\r\n  checkChoice: function (choice) {\r\n    if (this.answer == choice.choice) {\r\n      this.correctSound.play();\r\n      choice.frame = 1;\r\n      this.game.time.events.add(Phaser.Timer.SECOND * 0.2, this.correct, this);\r\n    }\r\n    else {\r\n      choice.frame = 2;\r\n      this.wrong();\r\n    }\r\n  },\r\n\r\n  wrong: function () {\r\n\r\n\r\n    if (this.stats.lives <= 0) {\r\n      this.overSound.play();\r\n      this.livesImage.alpha = 0;\r\n      for (var m = 0; m < 4; m++) {\r\n        this.ansPost[m].inputEnabled = false;\r\n        if (this.ansPost[m].choice == this.answer) {\r\n          this.ansPost[m].frame = 1;\r\n\r\n\r\n\r\n        }\r\n      }\r\n      this.game.time.events.add(Phaser.Timer.SECOND * 3, this.gameover, this);\r\n    }\r\n    else {\r\n      this.wrongSound.play();\r\n      this.stats.lives -= 1;\r\n      this.streak = 0;\r\n      this.livesImage.frame = this.stats.lives;\r\n    }\r\n\r\n  },\r\n\r\n  gameover: function () {\r\n    this.game.state.start('gameOver');\r\n  },\r\n  correct: function () {\r\n    console.log(\"remaining: \" + this.countriesAF.length);\r\n    if (this.countriesAF.length <= 1) {\r\n      this.game.state.start('winState');\r\n    }\r\n    else {\r\n      this.game.global.score += 1;\r\n      this.txtScore.setText('SCORE: ' + this.game.global.score);\r\n      this.streak += 1;\r\n      if (this.streak >= 3) { this.bonus(); }\r\n      this.countriesAF.pop()\r\n      this.nextQuestion();\r\n    }\r\n    console.log(this.streak);\r\n  },\r\n\r\n  bonus: function () {\r\n    this.streak = 0;\r\n    if (this.stats.lives < 4) {\r\n      this.streakSound.play();\r\n      this.stats.lives += 1;\r\n      this.livesImage.frame = this.stats.lives;\r\n    }\r\n  },\r\n  reset: function () {\r\n    for (var i = 0; i < 4; i++) {\r\n      this.ansPost[i].frame = 0;\r\n      this.ansPost[i].inputEnabled = true;\r\n    }\r\n    this.options = [];\r\n\r\n  },\r\n  nextQuestion: function () {\r\n    this.reset();\r\n    Phaser.ArrayUtils.shuffle(this.countriesAF);\r\n    var queCountry = getInfo[this.countriesAF[this.countriesAF.length - 1]];\r\n    this.questionLine2.setText(queCountry.name + \" is?\");\r\n    this.answer = queCountry.capital;\r\n    this.usedCapitals.push(this.answer);\r\n    this.options.push(this.answer);\r\n\r\n    if (this.countriesAF.length <= 3) {\r\n      Phaser.ArrayUtils.shuffle(this.usedCapitals);\r\n      for (var i = 2; i < 5; i++) {\r\n        this.options.push(this.usedCapitals[i]);\r\n      }\r\n    }\r\n    else {\r\n      for (var i = 2; i < 5; i++) {\r\n        this.options.push(getInfo[this.countriesAF[this.countriesAF.length - i]].capital);\r\n      }\r\n\r\n    }\r\n    Phaser.ArrayUtils.shuffle(this.options);\r\n\r\n    for (var i = 0; i < 4; i++) {\r\n      this.ansPost[i].text.setText(this.options[i]);\r\n      this.ansPost[i].choice = this.options[i];\r\n    }\r\n\r\n  },\r\n};\r\n","createGameInDiv('game-canvas')\r\n\r\nfunction createGameInDiv(divId) {\r\n  var game = new Phaser.Game('100', '100', Phaser.CANVAS, divId);\r\n  Phaser.Device.whenReady(function () {\r\n    game.plugins.add(PhaserInput.Plugin);\r\n  });\r\n\r\n  game.getScaledWidth = function(widthToScale){\r\n    return widthToScale * (this.width/1600);\r\n  };\r\n\r\n  game.getScaledHeight = function(heightToScale){\r\n    return heightToScale * (this.height/1200);\r\n  };\r\n\r\n  game.global = {\r\n    score: 0,              //for keeping score in the different modes and displaying on game over\r\n    highscore: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]],\r\n    continentIndex: 0,     //for keeping track of the continent chosen by player\r\n    modeIndex: 0,           //for keeping track of the mode chosen by player\r\n    modeButton: [\"btCapital\", \"btFlag\", \"btPopulation\", \"btCurrency\"],   //to pick the right restart button to display\r\n    fullArray: [[\"DZ\", \"AO\", \"BJ\", \"BW\", \"BF\", \"BI\", \"CM\", \"CV\", \"CF\", \"TD\", \"KM\", \"CG\", \"CD\", \"CI\", \"DJ\", \"EG\", \"GQ\", \"ER\", \"ET\", \"GA\", \"GM\", \"GH\", \"GN\", \"GW\", \"KE\", \"LS\", \"LR\", \"LY\", \"MG\", \"MW\", \"ML\", \"MR\", \"MU\", \"YT\", \"MA\", \"MZ\", \"NA\", \"NE\", \"NG\", \"RE\", \"RW\", \"SH\", \"ST\", \"SN\", \"SC\", \"SL\", \"SO\", \"ZA\", \"SS\", \"SD\", \"SZ\", \"TZ\", \"TG\", \"TN\", \"UG\", \"EH\", \"ZM\", \"ZW\"], ['AI', 'AG', 'AR', 'AW', 'BS', 'BB', 'BZ', 'BM', 'BO', 'BQ', 'BR', 'CA', 'KY', 'CL', 'CO', 'CR', 'CU', 'CW', 'DM', 'DO', 'EC', 'SV', 'FK', 'GF', 'GL', 'GD', 'GP', 'GT', 'GY', 'HT', 'HN', 'JM', 'MQ', 'MX', 'MS', 'NI', 'PA', 'PY', 'PE', 'PR', 'BL', 'KN', 'LC', 'MF', 'PM', 'VC', 'SX', 'SR', 'TT', 'TC', 'US', 'UY', 'VE', 'VG', 'VI'], [\"AF\", \"AM\", \"AZ\", \"BH\", \"BD\", \"BT\", \"BN\", \"KH\", \"CN\", \"CY\", \"GE\", \"HK\", \"IN\", \"ID\", \"IR\", \"IQ\", \"IL\", \"JP\", \"JO\", \"KZ\", \"KP\", \"KR\", \"KW\", \"KG\", \"LA\", \"LB\", \"MO\", \"MY\", \"MV\", \"MN\", \"MM\", \"NP\", \"OM\", \"PK\", \"PS\", \"PH\", \"QA\", \"SA\", \"SG\", \"LK\", \"SY\", \"TW\", \"TJ\", \"TH\", \"TL\", \"TR\", \"TM\", \"AE\", \"UZ\", \"VN\", \"YE\"], ['AS', 'AU', 'CK', 'FJ', 'PF', 'GU', 'KI', 'MH', 'FM', 'NR', 'NC', 'NZ', 'NU', 'NF', 'MP', 'PW', 'PG', 'PN', 'WS', 'SB', 'TK', 'TO', 'TV', 'VU', 'WF'], [\"AX\", \"AL\", \"AD\", \"AT\", \"BY\", \"BE\", \"BA\", \"BG\", \"HR\", \"CZ\", \"DK\", \"EE\", \"FO\", \"FI\", \"FR\", \"DE\", \"GI\", \"GR\", \"GG\", \"VA\", \"HU\", \"IS\", \"IE\", \"IM\", \"IT\", \"JE\", \"LV\", \"LI\", \"LT\", \"LU\", \"MK\", \"MT\", \"MD\", \"MC\", \"ME\", \"NL\", \"NO\", \"PL\", \"PT\", \"RO\", \"RU\", \"SM\", \"RS\", \"SK\", \"SI\", \"ES\", \"SJ\", \"SE\", \"CH\", \"UA\", \"GB\"]]                   //Each array in the full array stores codes for the countries in a continent in the manner [Africa, Americas, Asia, Australia, Europe], and is used to get questions (countries) and answers (flags, cities) from the countires json file\r\n  }\r\n\r\n  var capitalState = require('./capitalState.js');\r\n  var populationState = require('./populationState.js');\r\n  var currencyState = require('./currencyState.js');\r\n  var flagState = require('./flagState.js');\r\n  var gameOver = require('./gameOver.js');\r\n  var winState = require('./winState.js');\r\n  var menuState = require('./menuState.js');\r\n  var preloadState = require('./preloadState.js');\r\n  var learnState = require('./learnState.js');\r\n  var bootState = require('./bootState.js');\r\n\r\n  game.state.add('capitalState', capitalState);\r\n  game.state.add('populationState', populationState);\r\n  game.state.add('currencyState', currencyState);\r\n  game.state.add('flagState', flagState);\r\n  game.state.add('gameOver', gameOver);\r\n  game.state.add('winState', winState);\r\n  game.state.add('menuState', menuState);\r\n  game.state.add('preloadState', preloadState);\r\n  game.state.add('learnState', learnState);\r\n  game.state.add('bootState', bootState);\r\n  game.state.start('bootState');\r\n\r\n}\r\n\r\n"],"sourceRoot":""}